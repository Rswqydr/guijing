<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiannvzuo.guijing.dao.GuijingGoodsMapper">

    <resultMap id="GuijingGoodsResult" type="com.xiannvzuo.guijing.entity.GuijingGoods">
        <result property="goodsId" column="goods_id"/>
        <result property="goodsName" column="goods_name"/>
        <result property="goodsIntro" column="goods_intro"/>
        <result property="goodsCategoryId" column="goods_category_id"/>
        <result property="goodsCoverImg" column="goods_cover_img"/>
        <result property="goodsCarousel" column="goods_carousel"/>
        <result property="goodsDetailContent" column="goods_detail_content"/>
        <result property="originalPrice" column="original_price"/>
        <result property="sellingPrice" column="selling_price"/>
        <result property="stockNum" column="stock_num"/>
        <result property="tag" column="tag"/>
        <result property="goodsSellStatus" column="goods_sell_status"/>
        <result property="createUser" column="create_user"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
<!--注意，需要将商品简介这一块摘出来！！！！！！！！！！！！！！！！！-->
    <sql id="BaseColumnList">
        goods_id, goods_name, goods_intro, goods_category_id, goods_cover_img,
        goods_carousel, original_price, selling_price,
        stock_num, tag, goods_sell_status, create_user, create_time,
        update_user, update_time
    </sql>
    <!--Blob表示某一块的意思-->
    <sql id="BlobColumnList">
        goods_detail_content
    </sql>
    <!--常规查找都不需要带上blob，除非呢通过主键查找到时候，一般返回商品信息都不用带上Blob，除非要求-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="GuijingGoodsResult">
        select
        <include refid="BaseColumnList"/>
        ,
        <include refid="BlobColumnList"/>
        from tb_guijing_goods_info
        where goods_id = #{goodsId}
    </select>

    <select id="selectByBatchPrimaryKeys" resultMap="GuijingGoodsResult">
        select
        <include refid="BaseColumnList"/>
        from tb_guijing_goods_info
        where goods_id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by field(goods_id,
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>

    <select id="findGuijingGoodsList" parameterType="Map" resultMap="GuijingGoodsResult">
        select
        <include refid="BaseColumnList"/>
        from tb_guijing_goods_info
        <where>
            <!--<if test="goodsName!=null and goodsName!=''">
                and goods_name like CONCAT("%",#{goodsName},"%")
            </if>
            <if test="goodsSellStatus!=null">
                and goods_sell_status = #{goodsSellStatus}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                and create_time > #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and create_time < #{endTime}
            </if>-->
            <if test="goodsName!=null and goodsName!=''">
                and goods_name like CONCAT('%','#{goodsName}','%')
            </if>
            <if test="goodsSellStatus!=null and goodsSellStatus!=''">
                and goods_sell_status = #{goodsSellStatus}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                and create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and create_time &lt; #{endTime}
            </if>
        </where>
        order by goods_id desc
        <if test="start!=null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>

    <!--search和查找list的不同之处在于，用前端页面搜索的要附带很多额外信息，比如商品关键字，商品类目，排序方式等，需要自己探索-->
    <select id="findGuijingGoodsBySearch" resultMap="GuijingGoodsResult" >
        select
        <include refid="BaseColumnList"/>
        from tb_guijing_goods_info
        <where>
            <if test="keyword != null and keyword != ''">
                and (goods_name like CONCAT("%",#{keyword},"%") ) or (goods_intro like CONCAT("%",#{keyword},"%") )
            </if>
            <if test="goodsCategoryId != null and goodsCategoryId!=''">
                and goods_category_id = #{goodsCategoryId}
            </if>
        </where>
        <if test="orderBy!=null and orderBy!=''">
            <choose>
                <when test="orderBy == 'new'">
                    <!-- 按照发布时间倒序排列 -->
                    order by goods_id desc
                </when>
                <when test="orderBy == 'price'">
                    <!-- 按照售价从小到大排列 -->
                    order by selling_price asc
                </when>
                <otherwise>
                    <!-- 默认按照库存数量从大到小排列 -->
                    order by stock_num desc
                </otherwise>
            </choose>
        </if>

        <if test="start != null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>

    <select id="getGTotalGuijingGoods" resultType="int" parameterType="Map">
        select count(*) from tb_guijing_goods_info
        <where>
            <if test="goodsName!=null and goodsName!=''">
                and goods_name like CONCAT('%','#{goodsName}','%')
            </if>
            <if test="goodsSellStatus!=null and goodsSellStatus!=''">
                and goods_sell_status = #{goodsSellStatus}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                and create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and create_time &lt; #{endTime}
            </if>
        </where>

    </select>

    <select id="getTotalGuijingGoodsBySearch" parameterType="Map" resultType="int">
        select count(*) from tb_guijing_goods_info
        <where>
            <if test="keyword!=null and keyword!=''">
                and (goods_name like CONCAT('%',#{keyword},'%') or goods_intro like CONCAT('%',#{keyword},'%'))
            </if>
            <if test="goodsCategoryId!=null and goodsCategoryId!=''">
                and goods_category_id = #{goodsCategoryId}
            </if>
        </where>
    </select>

    <delete id="tb_guijing_goods_info" parameterType="java.lang.Long">
        delete from tb_guijing_goods_info
        where goods_id = #{goodsId}
    </delete>

    <!--通过主键更新的话，注意有以下东西是不用更新的-->
    <!--比如：级联的对象不用更新，需要更具id更新，所以一定没有id 其他都可以更新-->
    <update id="updateByPrimaryKey" parameterType="com.xiannvzuo.guijing.entity.GuijingGoods">
        update tb_guijing_goods_info
        set goods_name = #{goodsName,jdbcType=VARCHAR},
              goods_intro = #{goodsIntro,jdbcType=VARCHAR},
              goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
              goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
              original_price = #{originalPrice,jdbcType=INTEGER},
              selling_price = #{sellingPrice,jdbcType=INTEGER},
              stock_num = #{stockNum,jdbcType=INTEGER},
              tag = #{tag,jdbcType=VARCHAR},
              goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
              create_user = #{createUser,jdbcType=INTEGER},
              create_time = #{createTime,jdbcType=TIMESTAMP},
              update_user = #{updateUser,jdbcType=INTEGER},
              update_time = #{updateTime,jdbcType=TIMESTAMP}
        where goods_id = #{goodsId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimarySelective" parameterType="com.xiannvzuo.guijing.entity.GuijingGoods">
        update tb_guijing_goods_info
        <set>
            <if test="goodsName != null">
                goods_name = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsIntro != null">
                goods_intro = #{goodsIntro,jdbcType=VARCHAR},
            </if>
            <if test="goodsCategoryId != null">
                goods_category_id = #{goodsCategoryId,jdbcType=BIGINT},
            </if>
            <if test="goodsCoverImg != null">
                goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
            </if>
            <if test="goodsCarousel != null">
                goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                original_price = #{originalPrice,jdbcType=INTEGER},
            </if>
            <if test="sellingPrice != null">
                selling_price = #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                stock_num = #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="tag != null">
                tag = #{tag,jdbcType=VARCHAR},
            </if>
            <if test="goodsSellStatus != null">
                goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="goodsDetailContent != null">
                goods_detail_content = #{goodsDetailContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where goods_id = #{goodsId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiannvzuo.guijing.entity.GuijingGoods">
        update tb_guijing_goods_info
        set goods_name = #{goodsName,jdbcType=VARCHAR},
              goods_intro = #{goodsIntro,jdbcType=VARCHAR},
              goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
              goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
              original_price = #{originalPrice,jdbcType=INTEGER},
              selling_price = #{sellingPrice,jdbcType=INTEGER},
              stock_num = #{stockNum,jdbcType=INTEGER},
              tag = #{tag,jdbcType=VARCHAR},
              goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
              create_user = #{createUser,jdbcType=INTEGER},
              create_time = #{createTime,jdbcType=TIMESTAMP},
              update_user = #{updateUser,jdbcType=INTEGER},
              update_time = #{updateTime,jdbcType=TIMESTAMP}
        where goods_id = #{goodsId,jdbcType=BIGINT}

    </update>

    <update id="updateStockNum" parameterType="com.xiannvzuo.guijing.entity.StockNumDTO">
        update tb_guijing_goods_info
        set goods_name = #{goodsName,jdbcType=VARCHAR},
              stock_num = #{stockNum,jdbcType=INTEGER},
        where goods_id = #{goodsId,jdbcType=BIGINT}
    </update>

    <update id="batchUpdateSellingStatus" >
        update tb_guijing_goods_info
        set goods_sell_status = #{sellStatus}
        <where>
            goods_id in
            <foreach collection="orderIds" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </where>
    </update>

    <insert id="insert" parameterType="com.xiannvzuo.guijing.entity.GuijingGoods">
        insert into tb_guijing_goods_info (goods_id, goods_name, goods_intro,
      goods_cover_img, goods_carousel, original_price,
      selling_price, stock_num, tag,
      goods_sell_status, create_user, create_time,
      update_user, update_time, goods_detail_content
      )
    values (#{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsIntro,jdbcType=VARCHAR},
      #{goodsCoverImg,jdbcType=VARCHAR}, #{goodsCarousel,jdbcType=VARCHAR}, #{originalPrice,jdbcType=INTEGER},
      #{sellingPrice,jdbcType=INTEGER}, #{stockNum,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR},
      #{goodsSellStatus,jdbcType=TINYINT}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{goodsDetailContent,jdbcType=LONGVARCHAR}
      )
    </insert>

    <insert id="insertSelective" parameterType="com.xiannvzuo.guijing.entity.GuijingGoods">
        insert into tb_guijing_goods_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="goodsIntro != null">
                goods_intro,
            </if>
            <if test="goodsCategoryId != null">
                goods_category_id,
            </if>
            <if test="goodsCoverImg != null">
                goods_cover_img,
            </if>
            <if test="goodsCarousel != null">
                goods_carousel,
            </if>
            <if test="originalPrice != null">
                original_price,
            </if>
            <if test="sellingPrice != null">
                selling_price,
            </if>
            <if test="stockNum != null">
                stock_num,
            </if>
            <if test="tag != null">
                tag,
            </if>
            <if test="goodsSellStatus != null">
                goods_sell_status,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="goodsDetailContent != null">
                goods_detail_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsId != null">
                #{goodsId,jdbcType=BIGINT},
            </if>
            <if test="goodsName != null">
                #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsIntro != null">
                #{goodsIntro,jdbcType=VARCHAR},
            </if>
            <if test="goodsIntro != null">
                #{goodsCategoryId,jdbcType=BIGINT},
            </if>
            <if test="goodsCoverImg != null">
                #{goodsCoverImg,jdbcType=VARCHAR},
            </if>
            <if test="goodsCarousel != null">
                #{goodsCarousel,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                #{originalPrice,jdbcType=INTEGER},
            </if>
            <if test="sellingPrice != null">
                #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="tag != null">
                #{tag,jdbcType=VARCHAR},
            </if>
            <if test="goodsSellStatus != null">
                #{goodsSellStatus,jdbcType=TINYINT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="goodsDetailContent != null">
                #{goodsDetailContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <insert id="batchInsertGuijingGoods" parameterType="com.xiannvzuo.guijing.entity.GuijingGoods">
            INSERT INTO tb_guijing_goods_info(goods_name, goods_intro, goods_category_id,goods_cover_img,
            goods_carousel,
            goods_detail_content,original_price,
            selling_price, stock_num)
            VALUES
            <foreach collection="list" item="goods" separator=",">
                (#{goods.goodsName},#{goods.goodsIntro},#{goods.goodsCategoryId},#{goods.goodsCoverImg},#{goods.goodsCarousel},#{goods.goodsDetailContent},#{goods.originalPrice},#{goods.sellingPrice},#{goods.stockNum})
            </foreach>
    </insert>

</mapper>